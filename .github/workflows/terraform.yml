name: "Vprofile-IAC"

on:
  push:
    branches:
      - main
      - staging
    paths:
      - eks-cluster/**
  pull_request:
    branches:
      - main
    paths:
      - eks-cluster/**
  workflow_dispatch: # Added workflow_dispatch

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-east-1
  EKS_CLUSTER: vprofile-eks

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: snyk/actions/setup@master  
      - name: Snyk Infrastructure as Code scan
        id: snyk-iac-scan
        uses: Gershon-A/snyk-iac-code-security-checks@v1.0.1
        continue-on-error: true
        with:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          SNYK_ORG_ID: ${{ secrets.SNYK_ORG_ID }}
          SEVERITY_THRESHOLD: "critical"
          FILE: "*"
          JSON_FILE_OUTPUT: "snyk.json"
          update_pr_with_scan_results: true
  
  terraform:
    name: "Apply Terraform Code changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./eks-cluster
    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v4

      - name: "Set up Terraform"
        uses: hashicorp/setup-terraform@v3

      - name: "Terraform init"
        id: init
        run: terraform init --backend-config="bucket=${{ env.BUCKET_TF_STATE }}"

      - name: "Terraform fmt"
        id: fmt
        run: terraform fmt -check
        continue-on-error: true


      - name: "Terraform validate"
        id: validate
        run: terraform validate

      - name: "Terraform plan"
        id: plan
        run: terraform plan -no-color -input=false -out planFile
        continue-on-error: true

      - name: "Terraform plan status"
        if: steps.plan.outcome == 'failure'
        run: exit 1