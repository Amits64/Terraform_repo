name: "Vprofile-IAC"

on:
  push:
    branches:
      - push
      - staging
    paths:
      - eks-cluster/**
  pull_request:
    branches:
      - main
    paths:
      - eks-cluster/**
  workflow_dispatch: # Added workflow_dispatch

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-east-1
  EKS_CLUSTER: vprofile-eks

jobs:
  security:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./eks-cluster
    steps:
      - uses: actions/checkout@master
      - uses: snyk/actions/setup@master
      - uses: actions/setup-go@v1
        with:
          go-version: '1.13'
      - name: Snyk monitor
        run: snyk iac test --report
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  
  terraform:
    name: "Apply Terraform Code changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./eks-cluster
    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v4

      - name: "Set up Terraform"
        uses: hashicorp/setup-terraform@v3

      - name: "Terraform init"
        id: init
        run: terraform init --backend-config="bucket=${{ env.BUCKET_TF_STATE }}"

      - name: "Terraform fmt"
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: "Terraform validate"
        id: validate
        run: terraform validate

      - name: "Terraform plan"
        id: plan
        run: terraform plan -no-color -input=false -out planFile
        continue-on-error: true

      - name: "Terraform plan status"
        if: steps.plan.outcome == 'failure'
        run: exit 1
      
      - name: "Debug Branch and Event"
        run: |
          echo "Branch: ${{ github.ref }}"
          echo "Event: ${{ github.event_name }}"

      - name: "Terraform Apply"
        id: apply
        if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
        run: terraform apply --auto-approve -input=false -parallelism=1 planFile

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: "Get Kube config file"
        id: getconfig
        if: steps.apply.outcome == 'success'
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }}

      - name: "Install Ingress Controller"
        if: steps.apply.outcome == 'success' && steps.getconfig.outcome == 'success'
        run: kubectl apply -f https://docs.projectcalico.org/v3.4/getting-started/kubernetes/installation/hosted/calico.yaml
